name: Fetch and Update Lake Data

on:
  schedule:
    - cron: "27 * * * *"  # Runs at the 27th minute of every hour
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  fetch_lake_data:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false  # We'll use our own token
          fetch-depth: 0  # Ensures full history is available for conflict resolution

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Dependencies
        run: pip install requests beautifulsoup4

      - name: Pull Latest Changes to Avoid Conflicts
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git fetch origin main
          git pull origin main --rebase  # Ensures the latest changes are applied first

      - name: Run Python Script
        run: python .github/scripts/fetch_lake_data.py

      - name: Commit and Push Changes
        run: |
          git add .
          git commit -m "Updated lake data" || echo "No changes to commit"
          git pull --rebase origin main  # Make sure our changes integrate with any new changes
          git push https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/jnkilgo/Chain-of-Lakes-Monitoring.git main || echo "Push failed, likely due to no changes"
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
